{"version":3,"sources":["slidenav.js"],"names":["$","Drupal","behaviors","clarin_theme_slidenav","attach","context","handlersAttached","headerHeight","lastScrollPosition","body","header","toc","collapsingNavbar","adminBar","handleClickOut","event","contains","target","css","collapse","handleScroll","parseFloat","window","getComputedStyle","height","pageScrollPosition","pageYOffset","document","documentElement","scrollTop","adminBarHeight","style","paddingTop","fixedAdminBarHeight","classList","defaultStickyTop","observedStickyTop","top","relativeDelta","add","remove","setHandlers","attached","getElementById","setTimeout","addEventListener","removeEventListener","on","jQuery"],"mappings":"CAAA,SAAUA,EAAGC,GAMXA,EAAOC,UAAUC,sBAAwB,CACvCC,OAAQ,SAAgBC,GACtB,IAAIC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EACAC,EAEJ,SAASC,EAAeC,GAEnBL,EAAOM,SAASD,EAAME,SACV,MAAZJ,GAA2BA,EAASG,SAASD,EAAME,SAChB,SAApCL,EAAiBM,IAAI,YAGrBN,EAAiBO,SAAS,QAI9B,SAASC,IACPb,EAAec,WAAWC,OAAOC,iBAAiBb,GAAQc,QAC1D,MAAMC,EACJH,OAAOI,aAAeC,SAASC,gBAAgBC,UAC3CC,EAAiBT,WAAWZ,EAAKsB,MAAMC,aAAe,EACtDC,EACJxB,EAAKsB,MAAMC,YAAcvB,EAAKyB,UAAUlB,SAAS,iBAC7Cc,EACA,EACAK,EAAmBF,EAAsB1B,EACzC6B,EAAoB1B,EAAOqB,MAAMM,IACnChB,WAAWX,EAAOqB,MAAMM,KACxB,EACEC,EACJ9B,EAAqBiB,EAAqBW,EAG1CE,EAAgBH,GAChBG,EAAgBL,GAGhBvB,EAAOqB,MAAMM,IAASC,EAAH,KACf3B,IAAKA,EAAIoB,MAAMM,IAASC,EAAgB/B,EAAe,GAAlC,MAGvBkB,GACyB,IAAxBQ,EACG1B,EAAeuB,EACfvB,IAEJG,EAAOwB,UAAUK,IAAI,kBAEdD,EAAgBH,GAEzBzB,EAAOqB,MAAMM,IAASF,EAAH,KACfxB,IAAKA,EAAIoB,MAAMM,IAASF,EAAmB5B,EAAe,GAArC,MACzBG,EAAOwB,UAAUM,OAAO,kBACfF,EAAgBL,IAEzBvB,EAAOqB,MAAMM,IAASJ,EAAH,KACftB,IACFA,EAAIoB,MAAMM,IAASJ,EAAsB1B,EAAe,GAAxC,MAGhBkB,IACyB,IAAxBQ,EAA4BH,EAAiB,IAE9CpB,EAAOwB,UAAUM,OAAO,kBAG5BhC,EAAqBiB,EAGvB,SAASgB,EAAYC,GAYnB,OAXAjC,EAAOkB,SAASlB,KAChBI,EAAWc,SAASgB,eAAe,0BACnCjC,EAASiB,SAASgB,eAAe,UACjChC,EAAMgB,SAASgB,eAAe,OAC9B/B,EAAmBZ,EAAE,oBAAqBS,GAC1CD,EACEc,OAAOI,aAAeC,SAASC,gBAAgBC,UACjDP,OAAOsB,WAAW,KAChBrC,EAAec,WAAWC,OAAOC,iBAAiBb,GAAQc,UAGnB,aAArCZ,EAAiBM,IAAI,aAElBwB,IAEHjC,EAAKoC,iBAAiB,QAAS/B,GAAgB,GAC/CQ,OAAOuB,iBAAiB,SAAUzB,GAAc,KAG3C,IAGLsB,IAEFjC,EAAKqC,oBAAoB,QAAShC,GAAgB,GAClDQ,OAAOwB,oBAAoB,SAAU1B,GAAc,KAG9C,GAGLf,IAAYsB,WACdrB,EAAmBmC,IAGnBzC,EAAEsB,OAAQjB,GAAS0C,GAAG,UAAU,WAC9BzC,EAAmBmC,EAAYnC,SAtHzC,CA2HG0C,OAAQ/C","file":"../slidenav.min.js","sourcesContent":["(function($, Drupal) {\n  // CLARIN slidenav helper methods for the top navbar menu. The slidenav is only used on screens narrower\n  // than 1200px and when activated in the theme options.\n  // - When the window width is narrower than 1200px, add a click handler to dismiss (slide out) the mobile floating\n  //     menu when clicking outside of it.\n  // - Remove the handler if the window becomes wider.\n  Drupal.behaviors.clarin_theme_slidenav = {\n    attach: function attach(context) {\n      let handlersAttached;\n      let headerHeight;\n      let lastScrollPosition;\n      let body;\n      let header;\n      let toc;\n      let collapsingNavbar;\n      let adminBar;\n\n      function handleClickOut(event) {\n        if (\n          !header.contains(event.target) && // do not close menu if clicking on it\n          (adminBar == null ? true : !adminBar.contains(event.target)) && // do not close menu if clicking on adminBar\n          collapsingNavbar.css(\"display\") !== \"none\" // is closed\n        ) {\n          // close menu\n          collapsingNavbar.collapse(\"hide\");\n        }\n      }\n\n      function handleScroll() {\n        headerHeight = parseFloat(window.getComputedStyle(header).height);\n        const pageScrollPosition =\n          window.pageYOffset || document.documentElement.scrollTop;\n        const adminBarHeight = parseFloat(body.style.paddingTop) || 0;\n        const fixedAdminBarHeight =\n          body.style.paddingTop && body.classList.contains(\"toolbar-fixed\")\n            ? adminBarHeight\n            : 0;\n        const defaultStickyTop = fixedAdminBarHeight - headerHeight;\n        const observedStickyTop = header.style.top\n          ? parseFloat(header.style.top)\n          : 0;\n        const relativeDelta =\n          lastScrollPosition - pageScrollPosition + observedStickyTop;\n\n        if (\n          relativeDelta > defaultStickyTop &&\n          relativeDelta < fixedAdminBarHeight\n        ) {\n          // in betwen stage\n          header.style.top = `${relativeDelta}px`;\n          if (toc) toc.style.top = `${relativeDelta + headerHeight + 10}px`;\n\n          if (\n            pageScrollPosition >\n            (fixedAdminBarHeight === 0\n              ? headerHeight + adminBarHeight\n              : headerHeight)\n          ) {\n            header.classList.add(\"shadow-header\");\n          }\n        } else if (relativeDelta < defaultStickyTop) {\n          // fully disappears\n          header.style.top = `${defaultStickyTop}px`;\n          if (toc) toc.style.top = `${defaultStickyTop + headerHeight + 10}px`;\n          header.classList.remove(\"shadow-header\");\n        } else if (relativeDelta > fixedAdminBarHeight) {\n          // fully appears\n          header.style.top = `${fixedAdminBarHeight}px`;\n          if (toc)\n            toc.style.top = `${fixedAdminBarHeight + headerHeight + 10}px`;\n\n          if (\n            pageScrollPosition <=\n            (fixedAdminBarHeight === 0 ? adminBarHeight : 0)\n          ) {\n            header.classList.remove(\"shadow-header\");\n          }\n        }\n        lastScrollPosition = pageScrollPosition;\n      }\n\n      function setHandlers(attached) {\n        body = document.body;\n        adminBar = document.getElementById(\"toolbar-administration\");\n        header = document.getElementById(\"header\");\n        toc = document.getElementById(\"toc\");\n        collapsingNavbar = $(\"#CollapsingNavbar\", body);\n        lastScrollPosition =\n          window.pageYOffset || document.documentElement.scrollTop;\n        window.setTimeout(() => {\n          headerHeight = parseFloat(window.getComputedStyle(header).height); /// Track page scroll with extra XYpx \"delay\"\n        });\n\n        if (collapsingNavbar.css(\"position\") === \"absolute\") {\n          // When the viewport is narrow enough #collapsingNavbar becomes \"fixed\" -> attach handler to body\n          if (!attached) {\n            // Add listeners\n            body.addEventListener(\"click\", handleClickOut, true);\n            window.addEventListener(\"scroll\", handleScroll, true);\n            // console.log(\"handlers attached\");\n          }\n          return true;\n        }\n        // When the viewport is wide enough  -> detach handler from body\n        if (attached) {\n          // Remove listeners\n          body.removeEventListener(\"click\", handleClickOut, true);\n          window.removeEventListener(\"scroll\", handleScroll, true);\n          // console.log(\"handlers dettached\");\n        }\n        return false;\n      }\n\n      if (context === document) {\n        handlersAttached = setHandlers();\n\n        // On resize event set click handler to dismiss the mobile floating menu\n        $(window, context).on(\"resize\", function handleResize() {\n          handlersAttached = setHandlers(handlersAttached);\n        });\n      }\n    }\n  };\n})(jQuery, Drupal);\n"]}