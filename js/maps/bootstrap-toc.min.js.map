{"version":3,"sources":["bootstrap-toc.js"],"names":["$","window","Toc","helpers","findOrFilter","$el","selector","$descendants","find","filter","add","generateUniqueIdBase","el","text","trim","replace","substring","toLowerCase","tagName","generateUniqueId","anchorBase","this","i","anchor","document","getElementById","generateAnchor","id","createNavList","createChildNavList","$parent","$childList","append","generateNavEl","$a","attr","$li","generateNavItem","headingEl","$heading","data","getTopLevel","$scope","length","getHeadings","topLevel","topSelector","secondarySelector","getNavLevel","parseInt","charAt","populateNav","$topContext","$headings","$prevNav","$context","sort","a","b","getBoundingClientRect","top","each","$newNav","parseOps","arg","opts","jquery","$nav","body","init","jQuery"],"mappings":"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","file":"../bootstrap-toc.min.js","sourcesContent":["/*!\n * Bootstrap Table of Contents v1.0.1 (http://afeld.github.io/bootstrap-toc/)\n * Copyright 2015 Aidan Feldman\n * Licensed under MIT (https://github.com/afeld/bootstrap-toc/blob/gh-pages/LICENSE.md) */\n(function($) {\n  \"use strict\";\n\n  window.Toc = {\n    helpers: {\n      // return all matching elements in the set, or their descendants\n      findOrFilter: function($el, selector) {\n        // http://danielnouri.org/notes/2011/03/14/a-jquery-find-that-also-finds-the-root-element/\n        // http://stackoverflow.com/a/12731439/358804\n        var $descendants = $el.find(selector);\n        return $el\n          .filter(selector)\n          .add($descendants)\n          .filter(\":not([data-toc-skip])\");\n      },\n\n      generateUniqueIdBase: function(el) {\n        var text = $(el).text();\n\n        // adapted from\n        // https://github.com/bryanbraun/anchorjs/blob/65fede08d0e4a705f72f1e7e6284f643d5ad3cf3/anchor.js#L237-L257\n\n        // Regex for finding the non-safe URL characters (many need escaping): & +$,:;=?@\"#{}|^~[`%!'<>]./()*\\ (newlines, tabs, backspace, & vertical tabs)\n        var nonsafeChars = /[& +$,:;=?@\"#{}|^~[`%!'<>\\]\\.\\/\\(\\)\\*\\\\\\n\\t\\b\\v]/g,\n          urlText;\n\n        // Note: we trim hyphens after truncating because truncating can cause dangling hyphens.\n        // Example string:                      // \" ⚡⚡ Don't forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n        urlText = text\n          .trim() // \"⚡⚡ Don't forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n          .replace(/\\'/gi, \"\") // \"⚡⚡ Dont forget: URL fragments should be i18n-friendly, hyphenated, short, and clean.\"\n          .replace(nonsafeChars, \"-\") // \"⚡⚡-Dont-forget--URL-fragments-should-be-i18n-friendly--hyphenated--short--and-clean-\"\n          .replace(/-{2,}/g, \"-\") // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated-short-and-clean-\"\n          .substring(0, 64) // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated-\"\n          .replace(/^-+|-+$/gm, \"\") // \"⚡⚡-Dont-forget-URL-fragments-should-be-i18n-friendly-hyphenated\"\n          .toLowerCase(); // \"⚡⚡-dont-forget-url-fragments-should-be-i18n-friendly-hyphenated\"\n\n        return urlText || el.tagName.toLowerCase();\n      },\n\n      generateUniqueId: function(el) {\n        var anchorBase = this.generateUniqueIdBase(el);\n        for (var i = 0; ; i++) {\n          var anchor = anchorBase;\n          if (i > 0) {\n            // add suffix\n            anchor += \"-\" + i;\n          }\n          // check if ID already exists\n          if (!document.getElementById(anchor)) {\n            return anchor;\n          }\n        }\n      },\n\n      generateAnchor: function(el) {\n        if (el.id) {\n          return el.id;\n        } else {\n          var anchor = this.generateUniqueId(el);\n          el.id = anchor;\n          return anchor;\n        }\n      },\n\n      createNavList: function() {\n        return $('<ul class=\"nav navbar-nav\"></ul>');\n      },\n\n      createChildNavList: function($parent) {\n        var $childList = this.createNavList();\n        $parent.append($childList);\n        return $childList;\n      },\n\n      generateNavEl: function(anchor, text) {\n        var $a = $('<a class=\"nav-link\"></a>');\n        $a.attr(\"href\", \"#\" + anchor);\n        $a.text(text);\n        var $li = $(\"<li></li>\");\n        $li.append($a);\n        return $li;\n      },\n\n      generateNavItem: function(headingEl) {\n        var anchor = this.generateAnchor(headingEl);\n        var $heading = $(headingEl);\n        var text = $heading.data(\"toc-text\") || $heading.text();\n        return this.generateNavEl(anchor, text);\n      },\n\n      // Find the first heading level (`<h1>`, then `<h2>`, etc.) that has more than one element. Defaults to 1 (for `<h1>`).\n      getTopLevel: function($scope) {\n        for (var i = 1; i <= 6; i++) {\n          var $headings = this.findOrFilter($scope, \"h\" + i);\n          if ($headings.length > 1) {\n            return i;\n          }\n        }\n\n        return 1;\n      },\n\n      // returns the elements for the top level, and the next below it\n      getHeadings: function($scope, topLevel) {\n        var topSelector = \"h\" + topLevel;\n\n        var secondaryLevel = topLevel + 1;\n        var secondarySelector = \"h\" + secondaryLevel;\n\n        return this.findOrFilter($scope, topSelector + \",\" + secondarySelector);\n      },\n\n      getNavLevel: function(el) {\n        return parseInt(el.tagName.charAt(1), 10);\n      },\n\n      populateNav: function($topContext, topLevel, $headings) {\n        var $context = $topContext;\n        var $prevNav;\n\n        var helpers = this;\n                                                                                                                                                  \n        $headings.sort(function(a, b) {                                 \n            return a.getBoundingClientRect().top > b.getBoundingClientRect().top ? 1 : a.getBoundingClientRect().top < b.getBoundingClientRect().top ? -1 : 0;\n        }); \n\n        $headings.each(function(i, el) {\n          var $newNav = helpers.generateNavItem(el);\n          var navLevel = helpers.getNavLevel(el);\n\n          // determine the proper $context\n          if (navLevel === topLevel) {\n            // use top level\n            $context = $topContext;\n          } else if ($prevNav && $context === $topContext) {\n            // create a new level of the tree and switch to it\n            $context = helpers.createChildNavList($prevNav);\n          } // else use the current $context\n\n          $context.append($newNav);\n\n          $prevNav = $newNav;\n        });\n      },\n\n      parseOps: function(arg) {\n        var opts;\n        if (arg.jquery) {\n          opts = {\n            $nav: arg\n          };\n        } else {\n          opts = arg;\n        }\n        opts.$scope = opts.$scope || $(document.body);\n        return opts;\n      }\n    },\n\n    // accepts a jQuery object, or an options object\n    init: function(opts) {\n      opts = this.helpers.parseOps(opts);\n\n      // ensure that the data attribute is in place for styling\n      opts.$nav.attr(\"data-toggle\", \"toc\");\n\n      var $topContext = this.helpers.createChildNavList(opts.$nav);\n      var topLevel = this.helpers.getTopLevel(opts.$scope);\n      var $headings = this.helpers.getHeadings(opts.$scope, topLevel);\n      this.helpers.populateNav($topContext, topLevel, $headings);\n    }\n  };\n\n  $(function() {\n    $('nav[data-toggle=\"toc\"]').each(function(i, el) {\n      var $nav = $(el);\n      Toc.init($nav);\n    });\n  });\n})(jQuery);"]}