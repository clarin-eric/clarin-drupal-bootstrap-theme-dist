{"version":3,"file":"../adminbar-helper.min.js","names":["$","Drupal","behaviors","clarin_theme_adminbar_helper","attach","context","settings","timer","prevEffectiveStickyTop","document","toolbar","body","mainToolbar","header","toc","each","index","adminBarElement","trayResizeObserver","ResizeObserver","entries","forEach","entry","toolbarElem","toolbarTotalHeight","clientHeight","id","activeTrays","length","elem","Math","floor","outerHeight","classList","contains","offsetTop","headerHeight","headerFixedStickyTop","headerObservedStickyTop","parseFloat","css","topOffset","abs","scrollspy","offsetValue","rootMargin","window","cancelAnimationFrame","requestAnimationFrame","hasClass","top","repositionContent","target","observe","jQuery"],"sources":["adminbar-helper.js"],"sourcesContent":["(($, Drupal) => {\n  // Helper methods for the administration toolbar\n  // - Reposition body and floating menu when user has admin toolbar enabled.\n  Drupal.behaviors.clarin_theme_adminbar_helper = {\n    attach: function attach(context, settings) {\n      let timer = null;\n      let prevEffectiveStickyTop = 0;\n\n      function repositionContent(mainToolbar, header, body, toc, toolbarElem) {\n        let toolbarTotalHeight = toolbarElem.clientHeight;\n\n        // We will try to avoid calls to mainToolbar.outerHeight(true) as toolbarElem might already contain\n        //   all the necessary height information to reposition the content\n\n        // - When we receive the main toolbar height -> add the trays height to it\n        // - When we receive a toolbar tray height -> add the main toolbar height to it\n        if (toolbarElem.id === \"toolbar-bar\") {\n          const activeTrays = $(\"div.toolbar-tray-horizontal.is-active\", body);\n          if (activeTrays.length) {\n            activeTrays.each((index, elem) => {\n              toolbarTotalHeight += elem.clientHeight;\n            });\n          }\n        } else if (toolbarElem.clientHeight === 0) {\n          // Tray became invisible:\n          if ($(\"div.toolbar-tray-horizontal.is-active\", body).length) {\n            // Other tray is now visible (tray switch) -> ignore as the other\n            // tray observer will do the repositioning\n            return;\n          }\n          // All toolbar trays are invisible -> [total height] = [main toolbar height]\n          toolbarTotalHeight = Math.floor(mainToolbar.outerHeight(true));\n        } else if (toolbarElem.classList.contains(\"toolbar-tray-horizontal\")) {\n          // Toolbar tray is visible and horizontal -> [total height] = [tray top offset] + [tray height]\n          toolbarTotalHeight = Math.floor(\n            toolbarElem.offsetTop + toolbarElem.clientHeight\n          );\n        } else {\n          // Toolbar tray is visible but vertical -> [total height] = [main toolbar height]\n          toolbarTotalHeight = Math.floor(mainToolbar.outerHeight(true));\n        }\n\n        // When the toolbar position is \"fixed\", the sticky menu \"top\" also needs to be repositioned.\n        //   We do it in the next frame (via requestAnimationFrame()) since when this handler runs, the\n        //   admin toolbar has not yet updated the classes of the body\n\n        // Check difference between default \"top\" in the previous state (prevEffectiveStickyTop) and current observed \"top\"\n        //  - > apply the same offset\n        const headerHeight = Math.floor(header.outerHeight(true));\n        const headerFixedStickyTop = toolbarTotalHeight - headerHeight; // the `top` property of the sticky header when the admin toolbar is fixed\n        const headerObservedStickyTop = Math.floor(\n          parseFloat(header.css(\"top\"))\n        );\n        const topOffset = Math.abs(\n          headerObservedStickyTop - prevEffectiveStickyTop\n        );\n\n        if (toc.length !== 0 && body.scrollspy) {\n          const offsetValue = `${toolbarTotalHeight + 10}px`;\n          toc.css(\"top\", `${offsetValue}px`);\n          body.scrollspy({\n            rootMargin: offsetValue\n          });\n        }\n\n        window.cancelAnimationFrame(timer);\n        timer = window.requestAnimationFrame(() => {\n          // The original core/modules/toolbar/js/views/ToolbarVisualView.js tries to position the body\n          //   taking into account the admin toolbar height. This does not work for certain window widths\n          //   when the flex container of the same bar (or tray) expands to two lines.\n          // - > Reset the padding-top set by core/modules/toolbar/js/views/ToolbarVisualView.js and\n          //   reposition content ourselves\n\n          // Reposition body\n          body.css(\"padding-top\", `${toolbarTotalHeight}px`);\n\n          if (header.css(\"position\") === \"sticky\") {\n            if (body.hasClass(\"toolbar-fixed\")) {\n              // Tablet screen widths (480px < width < 1200px) the admin toolbar becomes `position: fixed`\n              // shift our menu header down by the toolbar height\n              const top = headerFixedStickyTop + topOffset;\n              header.css(\"top\", `${top}px`);\n              prevEffectiveStickyTop = headerFixedStickyTop;\n            } else {\n              // Phone screen widths (width < 480px) the admin toolbar becomes `position: absolute`\n              const top = topOffset - headerHeight;\n              header.css(\"top\", `${top}px`);\n              prevEffectiveStickyTop = 0 - headerHeight;\n            }\n          } else {\n            // Reset when menu is not in use anymore\n            header.css(\"top\", \"\");\n            prevEffectiveStickyTop = 0;\n          }\n        });\n      }\n\n      if (context === document) {\n        if (settings.toolbar) {\n          // Admin toolbar is active:\n          const body = $(\"body\", context);\n          const mainToolbar = $(\"#toolbar-bar\", body);\n          const header = $(\"#header\", body);\n          const toc = $(\"#toc\", body);\n\n          // Use a resize observer on the admin toolbar and each of its trays to detect changes in height\n          // Reposition the content when they happen\n          $(\"#toolbar-bar, .toolbar-tray\", body).each(\n            (index, adminBarElement) => {\n              const trayResizeObserver = new ResizeObserver(entries => {\n                entries.forEach(entry => {\n                  repositionContent(\n                    mainToolbar,\n                    header,\n                    body,\n                    toc,\n                    entry.target\n                  );\n                });\n              });\n              trayResizeObserver.observe(adminBarElement);\n            }\n          );\n        }\n      }\n    }\n  };\n})(jQuery, Drupal);\n"],"mappings":"AAAA,EAAEA,EAAGC,KAGHA,EAAOC,UAAUC,6BAA+B,CAC9CC,OAAQ,SAAgBC,EAASC,GAC/B,IAAIC,EAAQ,KACRC,EAAyB,EA2F7B,GAAIH,IAAYI,UACVH,EAASI,QAAS,CAEpB,MAAMC,EAAOX,EAAE,OAAQK,GACjBO,EAAcZ,EAAE,eAAgBW,GAChCE,EAASb,EAAE,UAAWW,GACtBG,EAAMd,EAAE,OAAQW,GAItBX,EAAE,8BAA+BW,GAAMI,MACrC,CAACC,EAAOC,KACN,MAAMC,EAAqB,IAAIC,gBAAeC,IAC5CA,EAAQC,SAAQC,KAtG1B,SAA2BV,EAAaC,EAAQF,EAAMG,EAAKS,GACzD,IAAIC,EAAqBD,EAAYE,aAOrC,GAAuB,gBAAnBF,EAAYG,GAAsB,CACpC,MAAMC,EAAc3B,EAAE,wCAAyCW,GAC3DgB,EAAYC,QACdD,EAAYZ,MAAK,CAACC,EAAOa,KACvBL,GAAsBK,EAAKJ,YAAY,GAG7C,MAAO,GAAiC,IAA7BF,EAAYE,aAAoB,CAEzC,GAAIzB,EAAE,wCAAyCW,GAAMiB,OAGnD,OAGFJ,EAAqBM,KAAKC,MAAMnB,EAAYoB,aAAY,GAC1D,MAEER,EAFSD,EAAYU,UAAUC,SAAS,2BAEnBJ,KAAKC,MACxBR,EAAYY,UAAYZ,EAAYE,cAIjBK,KAAKC,MAAMnB,EAAYoB,aAAY,IAS1D,MAAMI,EAAeN,KAAKC,MAAMlB,EAAOmB,aAAY,IAC7CK,EAAuBb,EAAqBY,EAC5CE,EAA0BR,KAAKC,MACnCQ,WAAW1B,EAAO2B,IAAI,SAElBC,EAAYX,KAAKY,IACrBJ,EAA0B9B,GAG5B,GAAmB,IAAfM,EAAIc,QAAgBjB,EAAKgC,UAAW,CACtC,MAAMC,EAAc,GAAGpB,EAAqB,OAC5CV,EAAI0B,IAAI,MAAO,GAAGI,OAClBjC,EAAKgC,UAAU,CACbE,WAAYD,GAEhB,CAEAE,OAAOC,qBAAqBxC,GAC5BA,EAAQuC,OAAOE,uBAAsB,KAUnC,GAFArC,EAAK6B,IAAI,cAAe,GAAGhB,OAEI,WAA3BX,EAAO2B,IAAI,YACb,GAAI7B,EAAKsC,SAAS,iBAAkB,CAGlC,MAAMC,EAAMb,EAAuBI,EACnC5B,EAAO2B,IAAI,MAAO,GAAGU,OACrB1C,EAAyB6B,CAC3B,KAAO,CAEL,MAAMa,EAAMT,EAAYL,EACxBvB,EAAO2B,IAAI,MAAO,GAAGU,OACrB1C,EAAyB,EAAI4B,CAC/B,MAGAvB,EAAO2B,IAAI,MAAO,IAClBhC,EAAyB,CAC3B,GAEJ,CAgBY2C,CACEvC,EACAC,EACAF,EACAG,EACAQ,EAAM8B,OACP,GACD,IAEJlC,EAAmBmC,QAAQpC,EAAgB,GAGjD,CAEJ,EAEH,EA/HD,CA+HGqC,OAAQrD"}